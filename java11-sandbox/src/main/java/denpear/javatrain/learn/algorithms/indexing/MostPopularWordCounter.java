package denpear.javatrain.learn.algorithms.indexing;

import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.Stream;

class MostPopularWordCounter {
    static Map<String, Long> map = new TreeMap<>();

    public static Map<String, Long> count(Collection<String> lines, int topN) {
        for (String line : lines) {
            String[] array = line.replaceAll("\\pP", " ").
                    toLowerCase().
                    split("\\s+");

            for (int i = 0; i < array.length; i++) {
                String term = array[i];
                incrementTermCount(term);
            }
        }
        //Способ №2 Сортировка Map в Stream ссылка на метод c выводом двух часто встречающихся
        map.entrySet().stream().sorted(Map.Entry.comparingByValue(Comparator.reverseOrder())).limit(10).forEach(System.out::println);
        return map;
    }

    public static void main(String[] args) {
        Collection<String> stringCollection = Stream.of(
                        "На другой день к завтраку подавали очень вкусные пирожки, раков и бараньи котлеты; и пока ели, приходил наверх повар Никанор справиться, что гости желают к обеду. Это был человек среднего роста, с пухлым лицом и маленькими глазами, бритый, и казалось, что усы у него были не бриты, а выщипаны.\n" +
                                "Алехин рассказал, что красивая Пелагея была влюблена в этого повара. Так как он был пьяница и буйного нрава, то она не хотела за него замуж, но соглашалась жить так. Он же был очень набожен, и религиозные убеждения не позволяли ему жить так; он требовал, чтобы она шла за него, и иначе не хотел, и бранил ее, когда бывал пьян, и даже бил. Когда он бывал пьян, она пряталась наверху и рыдала, и тогда Алехин и прислуга не уходили из дому, чтобы защитить ее в случае надобности.\n" +
                                "Стали говорить о любви.\n" +
                                "— Как зарождается любовь, — сказал Алехин, — почему Пелагея не полюбила кого-нибудь другого, более подходящего к ней по ее душевным и внешним качествам, а полюбила именно Никанора, этого мурло, — тут у нас все зовут его мурлом, — поскольку в любви важны вопросы личного счастья — всё это неизвестно и обо всем этом можно трактовать как угодно. До сих пор о любви была сказана только одна неоспоримая правда, а именно, что «тайна сия велика есть», всё же остальное, что писали и говорили о любви, было не решением, а только постановкой вопросов, которые так и оставались неразрешенными. То объяснение, которое, казалось бы, годится для одного случая, уже не годится для десяти других, и самое лучшее, по-моему, — это объяснять каждый случай в отдельности, не пытаясь обобщать. Надо, как говорят доктора, индивидуализировать каждый отдельный случай.\n" +
                                "— Совершенно верно, — согласился Буркин.\n" +
                                "— Мы, русские, порядочные люди, питаем пристрастие к этим вопросам, остающимся без разрешения. Обыкновенно любовь поэтизируют, украшают ее розами, соловьями, мы же, русские, украшаем нашу любовь этими роковыми вопросами, и притом выбираем из них самые неинтересные. В Москве, когда я еще был студентом, у меня была подруга жизни, милая дама, которая всякий раз, когда я держал ее в объятиях, думала о том, сколько я буду выдавать ей в месяц и почем теперь говядина за фунт. Так и мы, когда любим, то не перестаем задавать себе вопросы: честно это или нечестно, умно или глупо, к чему поведет эта любовь и так далее. Хорошо это или нет, я не знаю, но что это мешает, не удовлетворяет, раздражает — это я знаю.\n" +
                                "Было похоже, что он хочет что-то рассказать. У людей, живущих одиноко, всегда бывает на душе что-нибудь такое, что они охотно бы рассказали. В городе холостяки нарочно ходят в баню и в рестораны, чтобы только поговорить, и иногда рассказывают банщикам или официантам очень интересные истории, в деревне же обыкновенно они изливают душу перед своими гостями. Теперь в окна было видно серое небо и деревья, мокрые от дождя, в такую погоду некуда было деваться и ничего больше не оставалось, как только рассказывать и слушать.\n" +
                                "— Я живу в Софьине и занимаюсь хозяйством уже давно, — начал Алехин, — с тех пор, как кончил в университете. По воспитанию я белоручка, по наклонностям — кабинетный человек, но на имении, когда я приехал сюда, был большой долг, а так как отец мой задолжал отчасти потому, что много тратил на мое образование, то я решил, что не уеду отсюда и буду работать, пока не уплачу этого долга. Я решил так и начал тут работать, признаюсь, не без некоторого отвращения. Здешняя земля дает не много, и, чтобы сельское хозяйство было не в убыток, нужно пользоваться трудом крепостных или наемных батраков, что почти одно и то же, или же вести свое хозяйство на крестьянский лад, то есть работать в поле самому, со своей семьей. Середины тут нет. Но я тогда не вдавался в такие тонкости. Я не оставлял в покое ни одного клочка земли, я сгонял всех мужиков и баб из соседних деревень, работа у меня тут кипела неистовая; я сам тоже пахал, сеял, косил и при этом скучал и брезгливо морщился, как деревенская кошка, которая с голоду ест на огороде огурцы; тело мое болело, и я спал на ходу. В первое время мне казалось, что эту рабочую жизнь я могу легко помирить со своими культурными привычками; для этого стоит только, думал я, держаться в жизни известного внешнего порядка. Я поселился тут наверху, в парадных комнатах, и завел так, что после завтрака и обеда мне подавали кофе с ликерами и, ложась спать, я читал на ночь «Вестник Европы». Но как-то пришел наш батюшка, отец Иван, и в один присест выпил все мои ликеры; и «Вестник Европы» пошел тоже к поповнам, так как летом, особенно во время покоса, я не успевал добраться до своей постели и засыпал в сарае в санях или где-нибудь в лесной сторожке — какое уж тут чтение? Я мало-помалу перебрался вниз, стал обедать в людской кухне, и из прежней роскоши у меня осталась только вся эта прислуга, которая еще служила моему отцу и которую уволить мне было бы больно.")
                .collect(Collectors.toCollection(ArrayList::new));
        map = count(stringCollection, 10);
        //       System.out.println(stringCollection);
    }

    public static void incrementTermCount(String term) {
        // System.out.println(term);
        put(term, get(term) + 1);
    }

    public static void put(String term, long count) {
        map.put(term, count);
    }

    public static Long get(String term) {
        Long count = map.get(term);
        return count == null ? 0 : count;
    }

}